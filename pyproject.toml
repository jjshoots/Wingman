[tool.pyright]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "jj_wingman"
version = "0.5.1"
authors = [
  { name="Jet", email="taijunjet@hotmail.com" },
]
description = "Wingman library for AI projects."
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = ["numpy", "wandb", "pyyaml"]
keywords = ["Machine Learning"]
license = { file="./LICENSE.txt" }

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["wingman", "wingman.*"]

[project.scripts]
wingman-generate-yaml = "wingman:generate_yaml"
wingman-compress-weights = "wingman:compress_weights"

[project.urls]
"Homepage" = "https://github.com/jjshoots/Wingman"

[tool.setuptools.package-data]
wingman = ["*.yaml"]

[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"
